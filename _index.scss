@import "helpers";

$scale-factor: 8;
$base-font-size: 1rem;
$line-height-unit: 0.25rem;
$use-calc: false;

@mixin compose($font-size-degree: 0, $line-height-degree: null) {
  $font-size-degree: trunc($font-size-degree);
  $n: $scale-factor;
  $m: $scale-factor - $font-size-degree;

  @if $font-size-degree == 0 {
    font-size: $base-font-size;
  } @else if $use-calc {
    font-size: calc(#{$base-font-size} * #{$n} / #{$m});
  } @else {
    font-size: $base-font-size * $n / $m;
  }

  @if type-of($line-height-degree) == number {
    @include compose-line-height($font-size-degree, $line-height-degree);
  }
}

@mixin compose-line-height($font-size-degree: 0, $line-height-degree: 0) {
  $font-size-degree: trunc($font-size-degree);
  $line-height-degree: trunc($line-height-degree);
  $font-size: $base-font-size * $scale-factor / ($scale-factor - $font-size-degree);
  $line-height-multiple: 1;

  @while $line-height-unit * $line-height-multiple < $font-size {
    $line-height-multiple: $line-height-multiple + 1;
  }

  $n: ($line-height-multiple + $line-height-degree) * ($scale-factor - $font-size-degree);
  $m: $scale-factor * ($base-font-size / $line-height-unit);

  @if $n == $m {
    line-height: 1;
  }  @else if $use-calc {
    line-height: calc(1em * #{$n} / #{$m});
  } @else {
    line-height: $n / $m;
  }
}
